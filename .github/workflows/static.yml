# 用于部署静态内容到 GitHub Pages 的简单工作流
name: Deploy static content to Pages

on:
  # 在推送到 main 分支时运行
  push:
    branches: ["main"]

  # 允许从 Actions 选项卡手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # 单个部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Copy files to root and create directory structure
        run: |
          # 创建必要的目录结构
          mkdir -p essay-title-generator
          
          # 复制 essay-title-generator 目录中的所有文件到根目录
          cp -r essay-title-generator/* .
          
          # 同时保留 essay-title-generator 目录结构
          cp -r essay-title-generator/* essay-title-generator/ || true
          
          # 确保所有必要的文件都存在于根目录
          ls -la
          
          # 确保 .nojekyll 文件存在
          touch .nojekyll
          
          # 创建一个简单的重定向页面，从根目录重定向到 essay-title-generator/index.html
          cat > redirect.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <meta http-equiv="refresh" content="0; url=essay-title-generator/index.html">
            <title>重定向到论文标题生成器</title>
          </head>
          <body>
            <p>如果您没有被自动重定向，请<a href="essay-title-generator/index.html">点击这里</a>。</p>
          </body>
          </html>
          EOL
          
          # 将重定向页面复制为根目录的 index.html
          cp redirect.html index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # 上传整个仓库
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 